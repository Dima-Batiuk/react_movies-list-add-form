{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","hasError","handleChange","event","target","value","name","setState","handleSubmit","preventDefault","props","onAdd","this","onSubmit","type","placeholder","onChange","React","Component","App","moviesFromServer","addMovie","String","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3609eafd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends React.Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    hasError: false,\n  };\n\n  handleChange = (event) => {\n    const { target } = event;\n    const { value, name } = target;\n\n    this.setState({\n      [name]: value,\n      hasError: false,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState(state => ({\n      hasError: !state.title && !state.description\n        && !state.imgUrl && !state.imdbUrl,\n    }));\n\n    const { title, description, imgUrl, imdbUrl } = this.state;\n\n    if (!title && !description && !imgUrl && !imdbUrl) {\n      return;\n    }\n\n    this.props.onAdd(title, description, imgUrl, imdbUrl);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n    });\n  };\n\n  render() {\n    const { hasError } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"form\"\n      >\n        <input\n          name=\"title\"\n          type=\"text\"\n          value={this.state.title}\n          placeholder=\"Title\"\n          onChange={this.handleChange}\n        />\n        <textarea\n          name=\"description\"\n          value={this.state.description}\n          placeholder=\"Description\"\n          onChange={this.handleChange}\n        />\n        <input\n          name=\"imgUrl\"\n          type=\"text\"\n          value={this.state.imgUrl}\n          placeholder=\"ImgUrl\"\n          onChange={this.handleChange}\n        />\n        <input\n          name=\"imdbUrl\"\n          type=\"text\"\n          value={this.state.imdbUrl}\n          placeholder=\"ImdbUrl\"\n          onChange={this.handleChange}\n        />\n        {hasError && (\n          <div className=\"error\">Fill all fields!</div>\n        )}\n        <button\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        {\n          imdbId: String(Math.random()),\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n        }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}