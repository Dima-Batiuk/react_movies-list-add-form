{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newMovie","handleChange","event","target","value","name","setState","handleSubmit","preventDefault","props","onAdd","this","onSubmit","type","placeholder","onChange","required","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAiBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,G,MAAb,4MACEC,MAAQ,CACNC,SAAU,CACRjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAPd,EAYEI,aAAe,SAACC,GACd,IAAQC,EAAWD,EAAXC,OACAC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,EAAKC,SAAU,CACbN,SAAS,eACNK,EAAOD,MAlBhB,EAuBEG,aAAe,SAACL,GACdA,EAAMM,iBAEN,EAAKC,MAAMC,MAAM,EAAKX,MAAMC,UAE5B,EAAKM,SAAS,CACZN,SAAU,CACRjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,OAlChB,4CAuCE,WACE,MAAwDc,KAAKZ,MAAMC,SAA3DjB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,QAASW,EAA7C,EAA6CA,OAE7C,OACE,0BACEe,SAAUD,KAAKJ,aACfpB,UAAU,QAEV,2BACEkB,KAAK,QACLQ,KAAK,OACLT,MAAOrB,EACP+B,YAAY,QACZC,SAAUJ,KAAKV,aACfe,UAAQ,IAEV,8BACEX,KAAK,cACLD,MAAOpB,EACP8B,YAAY,cACZC,SAAUJ,KAAKV,aACfe,UAAQ,IAEV,2BACEX,KAAK,SACLQ,KAAK,OACLT,MAAOnB,EACP6B,YAAY,SACZC,SAAUJ,KAAKV,aACfe,UAAQ,IAEV,2BACEX,KAAK,SACLQ,KAAK,OACLT,MAAOP,EACPiB,YAAY,SACZC,SAAUJ,KAAKV,aACfe,UAAQ,IAEV,2BACEX,KAAK,UACLQ,KAAK,OACLT,MAAOlB,EACP4B,YAAY,UACZC,SAAUJ,KAAKV,aACfe,UAAQ,IAEV,4BACEH,KAAK,UADP,kBAtFR,GAA8BI,IAAMC,Y,OCEvBC,EAAb,4MACEpB,MAAQ,CACNN,OAAQ2B,GAFZ,EAKEC,SAAW,SAACrB,GACV,EAAKM,UAAS,SAAAP,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBO,SAPhC,4CAWE,WACE,IAAQP,EAAWkB,KAAKZ,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEuB,MAAOC,KAAKU,iBArBxB,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.82ee8bce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n      imdbId: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends React.Component {\n  state = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n\n  };\n\n  handleChange = (event) => {\n    const { target } = event;\n    const { value, name } = target;\n\n    this.setState(({\n      newMovie: {\n        [name]: value,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state.newMovie);\n\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state.newMovie;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"form\"\n      >\n        <input\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          placeholder=\"Title\"\n          onChange={this.handleChange}\n          required\n        />\n        <textarea\n          name=\"description\"\n          value={description}\n          placeholder=\"Description\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          name=\"imgUrl\"\n          type=\"text\"\n          value={imgUrl}\n          placeholder=\"ImgUrl\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          name=\"imdbId\"\n          type=\"text\"\n          value={imdbId}\n          placeholder=\"ImdbId\"\n          onChange={this.handleChange}\n          required\n        />\n        <input\n          name=\"imdbUrl\"\n          type=\"text\"\n          value={imdbUrl}\n          placeholder=\"ImdbUrl\"\n          onChange={this.handleChange}\n          required\n        />\n        <button\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}